server.port=8051
#/sungang/
server.context-path=
# 项目名称尽量用小写
spring.application.name=genesis-provider-by-zuul


########################### JWT #############################
jwt.header = Authorization
jwt.secret = mySecret
jwt.expiration = 604800
########################### JWT #############################


########################################################
### i18n setting.
########################################################
#指定message的basename，多个以逗号分隔，如果不加包名的话，默认从classpath路径开始，默认: messages
spring.messages.basename=i18n/messages
#设定加载的资源文件缓存失效时间，-1的话为永不过期，默认为-1
spring.messages.cache-seconds= 3600
#设定Message bundles的编码，默认: UTF-8
#spring.messages.encoding=UTF-8



# 日志
#logging.file=log.log
#logging.level.org.springframework.web=INFO
#设置true 可以查看boot运行 已启用的自动配置
#Positive matches:表示已启用的配置
#Negative matches:表示未启用的配置
#debug=true
#日志
log.path=/Users/sungang/Documents/logs/spring-cloud/zuul
#log.path=/logs/lilaila-pay-msg
log.level=INFO
#会检查终端是否支持ANSI，是的话就采用彩色输出
spring.output.ansi.enabled = DETECT


##
#mybatis.mapper-package = com.flame.provider.good.mapper
#mybatis.mapper-locations[0] = classpath:mapper/*.xml
#mybatis.type-aliases-package = com.flame.model

########################################################
### Mybatis Setting
########################################################
#mybatis
mybatis.type-aliases-package=com.flame.model
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.config-location=classpath:mybatis/mybatis-config.xml
#mapper
#mappers 多个接口时逗号隔开
mapper.mappers=com.flame.core.dao.mybatis.BaseMapper
mapper.not-empty=false
mapper.identity=MYSQL
#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql


spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/spring-cloud-test?autoReconnect=true&useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=123456


# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000 
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.validationQuery=SELECT 'x'
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=wall,stat
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true



#设置与Eureka Server交互的地址，查询服务和注册服务都需要依赖这个地址。默认是http://localhost:8761/eureka ；多个地址可使用 , 分隔
#,http://discovery2:8762/,http://discovery3:8763/
eureka.client.serviceUrl.defaultZone=http://admin:123456@discovery1:8761/eureka/,http://admin:123456@discovery2:8762/eureka/,http://admin:123456@discovery3:8763/eureka/
#开启健康检查（需要spring-boot-starter-actuator依赖）
eureka.client.healthcheck.enabled=true
#使用IP
#eureka.instance.preferIpAddress = true
# 续约更新时间间隔（默认30秒）
eureka.instance.lease-renewal-interval-in-seconds=10
# 续约到期时间（默认90秒）
eureka.instance.lease-expiration-duration-in-seconds=30
#该配置是让Hystrix的超时时间改为10秒
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
#该配置，用于禁用Hystrix的超时时间
#hystrix.command.default.execution.timeout.enabled= false
#该配置，用于索性禁用feign的hystrix。该做法除非一些特殊场景，不推荐使用
#feign.hystrix.enabled: false


# 要忽视的服务
# zuul.ignored-services=
# 更细细粒度的忽略
# zuul.ignored-patterns = /**/admin/**
# 设置 请求前缀
zuul.prefix=/api
# 设置前缀 默认是true 当设置为false 正常的url也不能访问 可通过日志看一下请求路径
zuul.strip-prefix=true
#


# routes to serviceId
zuul.routes.good_api.path=/good_api/**
#demo goods Eureka的服务id(小写)
zuul.routes.good_api.serviceId=genesis-provider-goods
# 正则 可以在serviceid 指定 -v1既可 访问直接localhost:8051/v1/api/good_api/..
#zuul.routes.good_api.serviceId=genesis-provider-goods-v1


# routes to URL
#zuul.routes.good_api.url=ip:port
#sensitiveHeaders 不传播指定的 header 到指定的 ServiceId 去
zuul.routes.good_api.sensitiveHeaders=Cookie,Set-Cookie,Authorization


# order
zuul.routes.order_api.path=/order_api/**
zuul.routes.order_api.serviceId=genesis-provider-order

#
zuul.routes.static.path=/static/**


# 初了 指定的路由之外。其他路由 策略
zuul.routes.legacy.path = /**


# 如果使用routes to URL 则不能进行负载均衡 所以需要一下配置
# zuul还是使用serviceId
#ribbon.eureka.enabled = false
#genesis-provider-goods.ribbon.listOfServers=ip:port,ip:port


## Zuul 上传
spring.http.multipart.max-file-size=100Mb
spring.http.multipart.max-request-size=100Mb


# 读写超时时间设置 比如上传一些大文件 需要很久时间 容易timeOut
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds= 60000
#ribbon.ConnectTimeout=3000
#ribbon.ReadTimeou= 60000





############################## Swagger-UI #################################
#标题
swagger.title=genesis-provider-by-zuul
#描述
swagger.description=Spring Cloud Zuul Example 1.x
#版本
swagger.version=0.1
#许可证URL
swagger.license=Apache License, Version 2.0
#服务条款URL
swagger.licenseUrl=https://www.apache.org/licenses/LICENSE-2.0.html
#
swagger.termsOfServiceUrl=https://github.com/dyc87112/spring-boot-starter-swagger
#维护人
swagger.contact.name=Williamsun
#维护人URL
swagger.contact.url=https://github.com/aillamsun
#维护人邮箱
swagger.contact.email=1120sungang@gmail.com
#扫描的基础包，默认：全扫描
swagger.base-package=com.flame.provider.zuul.controller
#需要处理的基础URL规则，默认：/**
swagger.base-path=/**
#需要排除的URL规则，默认：空
swagger.exclude-path=/error, /dashboard/**, /auth/**
############################## Swagger-UI #################################
